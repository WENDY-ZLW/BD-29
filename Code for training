import cv

global img
global node1, node2

def on_mouse(event, x, y, flags, param):
    global img, node1, node2
    img2 = img.copy()
    if event == cv.EVENT_LBUTTONDOWN:        
        point1 = (x,y)
        cv.circle(img2, point1, 10, (0,255,0), 5)
        cv.imshow('image', img2)
    elif event == cv2.EVENT_MOUSEMOVE and (flags & cv.EVENT_FLAG_LBUTTON):  #按住左键拖曳
        cv.rectangle(img2, node1, (x,y), (255,0,0), 5)              # 图像，矩形顶点，相对顶点，颜色，粗细
        cv.imshow('image', img2)
    elif event == cv.EVENT_LBUTTONUP:                                #左键释放
        point2 = (x,y)
        cv.rectangle(img2, node1, node2, (0,0,255), 5) 
        cv.imshow('image', img2)
        min_x = min(node[0], node2[0])     
        min_y = min(node1[1], node2[1])
        width = abs(node1[0] - node2[0])
        height = abs(node1[1] -node2[1])
        cut_img = img[min_y:min_y+height, min_x:min_x+width]  
        resize_img = cv.resize(cut_img, (28,28))                       # 调整图像尺寸为28*28
        ret, thresh_img = cv.threshold(resize_img,127,255,cv2.THRESH_BINARY) # 二值化
        cv.imshow('result', thresh_img)
        cv.imwrite('new4.jpg', thresh_img)                              # 预处理后图像保存位置

def main():
    global img
    img = cv.imread('1.jpg')                                            # 手写数字图像所在位置
    img = cv.cvtColor(img, cv.COLOR_BGR2GRAY)                          # 转换图像为单通道(灰度图)
    cv.namedWindow('image')
    cv.setMouseCallback('image', on_mouse)                              # 调用回调函数
    cv.imshow('image', img)
    cv.waitKey(0)

if __name__ == '__main__':
    main()                                                               #finish
